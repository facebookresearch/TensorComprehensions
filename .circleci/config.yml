version: 2
jobs:
  "build-1404":
    working_directory: ~/TensorComprehensions
    resource_class: large
    docker:
      - image: tensorcomprehensions/linux-trusty-gcc4.8-tapir5.0-cuda8-cudnn6-py3-conda:x86

    steps:
      - checkout
      - run:
          name: check_formatting
          command: |
            cd ~/TensorComprehensions
            CLANG=/usr/local/clang+llvm-tapir5.0/bin/clang-format ./check_format.sh

      - run:
          name: submodules
          command: |
            git submodule sync
            git submodule update --init --recursive

      - restore_cache:
          keys:
            - v2-caffe2-{{ checksum ".git/modules/third-party/caffe2/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404

      - restore_cache:
          keys:
            - v1-aten-{{ checksum ".git/modules/third-party/ATen/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404

      - restore_cache:
          keys:
            - v1-isl-{{ checksum ".git/modules/third-party/islpp/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404

      - restore_cache:
          keys:
            - v1-halide-{{ checksum ".git/modules/third-party/halide/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404

      - run:
          name: build
          command: |
            cd ~/TensorComprehensions
            export TC_DIR=$(pwd)
            VERBOSE=1 USE_CONTBUILD_CACHE=1 CORES=16 CMAKE_VERSION="cmake" ATEN_NO_CUDA=0 CLANG_PREFIX="`/usr/local/clang+llvm-tapir5.0/bin/llvm-config --prefix`" ./build.sh --all

      - save_cache:
          key: v2-caffe2-{{ checksum ".git/modules/third-party/caffe2/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404
          paths:
            - third-party-install/bin/convert_caffe_image_db
            - third-party-install/bin/convert_db
            - third-party-install/bin/db_throughput
            - third-party-install/bin/make_cifar_db
            - third-party-install/bin/make_mnist_db
            - third-party-install/bin/predictor_verifier
            - third-party-install/bin/print_registered_core_operators
            - third-party-install/bin/run_plan
            - third-party-install/bin/speed_benchmark
            - third-party-install/bin/split_db
            - third-party-install/bin/inspect_gpus
            - third-party-install/bin/print_core_object_sizes
            - third-party-install/bin/tutorial_blob
            - third-party-install/caffe
            - third-party-install/caffe2
            - third-party-install/include/caffe
            - third-party-install/include/caffe2
            - third-party-install/lib/libcaffe2.so
            - third-party-install/lib/libcaffe2_gpu.so
            - third-party/caffe2/build_host_protoc

      - save_cache:
          key: v1-aten-{{ checksum ".git/modules/third-party/ATen/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404
          paths:
            - third-party-install/share/ATen
            - third-party-install/include/ATen
            - third-party-install/include/TH
            - third-party-install/include/THC
            - third-party-install/include/THCS
            - third-party-install/include/THCUNN
            - third-party-install/include/THNN
            - third-party-install/include/THS
            - third-party-install/lib/libATen.so
            - third-party-install/lib/libATen.so.1
            - third-party-install/lib/libTH.so
            - third-party-install/lib/libTH.so.0
            - third-party-install/lib/libTHC.so
            - third-party-install/lib/libTHC.so.0
            - third-party-install/lib/libTHCS.so
            - third-party-install/lib/libTHCS.so.1
            - third-party-install/lib/libTHCUNN.so
            - third-party-install/lib/libTHNN.so
            - third-party-install/lib/libTHS.so
            - third-party-install/lib/libTHS.so.1
            - third-party/ATen/build/src/ATen/test

      - save_cache:
          key: v1-isl-{{ checksum ".git/modules/third-party/islpp/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404
          paths:
            - third-party-install/include/isl
            - third-party-install/lib/libisl.so
            - third-party-install/lib/libisl-static.a
            - third-party/islpp/build/isl_test
            - third-party/islpp/build/isl_test_int

      - save_cache:
          key: v1-halide-{{ checksum ".git/modules/third-party/halide/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1404
          paths:
            - third-party-install/include/Halide
            - third-party-install/lib/libHalide.so
            - third-party-install/lib/libHalide.a

      - run:
          name: test_isl
          command: |
            cd ~/TensorComprehensions
            LD_PRELOAD=$(pwd)/third-party-install/lib/libisl.so ./third-party/islpp/build/isl_test
            LD_PRELOAD=$(pwd)/third-party-install/lib/libisl.so ./third-party/islpp/build/isl_test_int

      - run:
          name: test_cpu
          command: |
            cd ~/TensorComprehensions
            ./test_cpu.sh

  "build-1604":
    working_directory: ~/TensorComprehensions
    resource_class: large
    docker:
      - image: tensorcomprehensions/linux-xenial-gcc5-tapir5.0-cuda9-cudnn7-py3:x86

    steps:
      - checkout
      - run:
          name: check_formatting
          command: |
            cd ~/TensorComprehensions
            CLANG=/usr/local/clang+llvm-tapir5.0/bin/clang-format ./check_format.sh

      - run:
          name: submodules
          command: |
            git submodule sync
            git submodule update --init --recursive

      - restore_cache:
          keys:
            - v2-caffe2-{{ checksum ".git/modules/third-party/caffe2/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604

      - restore_cache:
          keys:
            - v1-aten-{{ checksum ".git/modules/third-party/ATen/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604

      - restore_cache:
          keys:
            - v1-isl-{{ checksum ".git/modules/third-party/islpp/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604

      - restore_cache:
          keys:
            - v1-halide-{{ checksum ".git/modules/third-party/halide/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604

      - run:
          name: build
          command: |
            cd ~/TensorComprehensions
            export TC_DIR=$(pwd)
            VERBOSE=1 USE_CONTBUILD_CACHE=1 CORES=16 CMAKE_VERSION="cmake" ATEN_NO_CUDA=0 CLANG_PREFIX="`/usr/local/clang+llvm-tapir5.0/bin/llvm-config --prefix`" BUILD_TYPE=Release ./build.sh --all

      - save_cache:
          key: v2-caffe2-{{ checksum ".git/modules/third-party/caffe2/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604
          paths:
            - third-party-install/bin/convert_caffe_image_db
            - third-party-install/bin/convert_db
            - third-party-install/bin/db_throughput
            - third-party-install/bin/make_cifar_db
            - third-party-install/bin/make_mnist_db
            - third-party-install/bin/predictor_verifier
            - third-party-install/bin/print_registered_core_operators
            - third-party-install/bin/run_plan
            - third-party-install/bin/speed_benchmark
            - third-party-install/bin/split_db
            - third-party-install/bin/inspect_gpus
            - third-party-install/bin/print_core_object_sizes
            - third-party-install/bin/tutorial_blob
            - third-party-install/caffe
            - third-party-install/caffe2
            - third-party-install/include/caffe
            - third-party-install/include/caffe2
            - third-party-install/lib/libcaffe2.so
            - third-party-install/lib/libcaffe2_gpu.so

      - save_cache:
          key: v1-aten-{{ checksum ".git/modules/third-party/ATen/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604
          paths:
            - third-party-install/share/ATen
            - third-party-install/include/ATen
            - third-party-install/include/TH
            - third-party-install/include/THC
            - third-party-install/include/THCS
            - third-party-install/include/THCUNN
            - third-party-install/include/THNN
            - third-party-install/include/THS
            - third-party-install/lib/libATen.so
            - third-party-install/lib/libATen.so.1
            - third-party-install/lib/libTH.so
            - third-party-install/lib/libTH.so.0
            - third-party-install/lib/libTHC.so
            - third-party-install/lib/libTHC.so.0
            - third-party-install/lib/libTHCS.so
            - third-party-install/lib/libTHCS.so.1
            - third-party-install/lib/libTHCUNN.so
            - third-party-install/lib/libTHNN.so
            - third-party-install/lib/libTHS.so
            - third-party-install/lib/libTHS.so.1
            - third-party/ATen/build/src/ATen/test

      - save_cache:
          key: v1-isl-{{ checksum ".git/modules/third-party/islpp/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604
          paths:
            - third-party-install/include/isl
            - third-party-install/lib/libisl.so
            - third-party-install/lib/libisl-static.a
            - third-party/islpp/build/isl_test
            - third-party/islpp/build/isl_test_int

      - save_cache:
          key: v1-halide-{{ checksum ".git/modules/third-party/halide/HEAD" }}-{{ checksum "build.sh" }}-{{ checksum ".circleci/config.yml" }}-{{ arch }}-1604
          paths:
            - third-party-install/include/Halide
            - third-party-install/lib/libHalide.so
            - third-party-install/lib/libHalide.a

      - run:
          name: test_isl
          command: |
            cd ~/TensorComprehensions
            LD_PRELOAD=$(pwd)/third-party-install/lib/libisl.so ./third-party/islpp/build/isl_test
            LD_PRELOAD=$(pwd)/third-party-install/lib/libisl.so ./third-party/islpp/build/isl_test_int

      - run:
          name: test_cpu
          command: |
            cd ~/TensorComprehensions
            ./test_cpu.sh

workflows:
  version: 2
  build:
    jobs:
      - "build-1404"
      - "build-1604"
